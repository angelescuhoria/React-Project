{"ast":null,"code":"import _slicedToArray from\"C:/Users/angel/Desktop/Stuff/React Project/project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./loginform.min.css';import{Link,useNavigate}from'react-router-dom';import{useState}from'react';import{auth}from'../../config/firebase';import{ErrorText}from'../../components/ErrorText/index';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LoginForm=function LoginForm(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),authenticating=_useState2[0],setAuthenticating=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var navigate=useNavigate();var signInWithEmailAndPassword=function signInWithEmailAndPassword(){if(error!=='')setError('');setAuthenticating(true);auth.signInWithEmailAndPassword(email,password).then(function(result){console.log(result);navigate('/myprofile');}).catch(function(error){console.log(error);setAuthenticating(false);if(error.code.includes('auth/invalid-email')){setError('Please provide a valid email.');}else if(error.code.includes('auth/wrong-password')){setError('Wrong Password. Try Again.');}else{setError('Unable to login. Please try again later.');}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"loginform\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{method:\"post\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text_field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",required:true,onChange:function onChange(event){return setEmail(event.target.value);},value:email}),/*#__PURE__*/_jsx(\"label\",{children:\"E-mail\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text_field\",children:[/*#__PURE__*/_jsx(\"input\",{autoComplete:\"new-password\",type:\"password\",required:true,onChange:function onChange(event){return setPassword(event.target.value);},value:password}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"forgot_password\",children:\"Forgot Password?\"}),/*#__PURE__*/_jsx(\"button\",{disabled:authenticating,onClick:function onClick(){return signInWithEmailAndPassword();},children:\"Login\"}),/*#__PURE__*/_jsx(\"div\",{className:\"signup_link\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"signup_text\",children:[\"Not a member?\",/*#__PURE__*/_jsx(Link,{to:\"/register\",className:\"link\",children:\" Sign Up!\"})]})}),/*#__PURE__*/_jsx(ErrorText,{error:error})]})]});};","map":{"version":3,"sources":["C:/Users/angel/Desktop/Stuff/React Project/project/src/modules/LoginForm/LoginForm.tsx"],"names":["Link","useNavigate","useState","auth","ErrorText","LoginForm","authenticating","setAuthenticating","email","setEmail","password","setPassword","error","setError","navigate","signInWithEmailAndPassword","then","result","console","log","catch","code","includes","event","target","value"],"mappings":"qIAAA,MAAO,qBAAP,CACA,OAASA,IAAT,CAAeC,WAAf,KAAkC,kBAAlC,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,IAAT,KAAqB,uBAArB,CACA,OAASC,SAAT,KAA0B,kCAA1B,C,wFAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC7B,cAA4CH,QAAQ,CAAU,KAAV,CAApD,wCAAOI,cAAP,eAAuBC,iBAAvB,eACA,eAA0BL,QAAQ,CAAS,EAAT,CAAlC,yCAAOM,KAAP,eAAcC,QAAd,eACA,eAAgCP,QAAQ,CAAS,EAAT,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA0BT,QAAQ,CAAS,EAAT,CAAlC,yCAAOU,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMc,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CACvC,GAAIH,KAAK,GAAK,EAAd,CAAkBC,QAAQ,CAAC,EAAD,CAAR,CAElBN,iBAAiB,CAAC,IAAD,CAAjB,CAEAJ,IAAI,CAACY,0BAAL,CAAgCP,KAAhC,CAAuCE,QAAvC,EACCM,IADD,CACM,SAAAC,MAAM,CAAI,CACdC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAH,QAAQ,CAAC,YAAD,CAAR,CACD,CAJD,EAKCM,KALD,CAKO,SAAAR,KAAK,CAAI,CACdM,OAAO,CAACC,GAAR,CAAYP,KAAZ,EACAL,iBAAiB,CAAC,KAAD,CAAjB,CAEA,GAAIK,KAAK,CAACS,IAAN,CAAWC,QAAX,CAAoB,oBAApB,CAAJ,CACA,CACET,QAAQ,CAAC,+BAAD,CAAR,CACD,CAHD,IAGO,IAAID,KAAK,CAACS,IAAN,CAAWC,QAAX,CAAoB,qBAApB,CAAJ,CACP,CACET,QAAQ,CAAC,4BAAD,CAAR,CACD,CAHM,IAIP,CACEA,QAAQ,CAAC,0CAAD,CAAR,CACD,CACF,CAnBD,EAoBD,CAzBD,CA2BA,mBACE,aAAK,SAAS,CAAG,WAAjB,wBACE,6BADF,cAEI,cAAM,MAAM,CAAG,MAAf,wBACE,aAAK,SAAS,CAAG,YAAjB,wBACE,cACE,IAAI,CAAC,OADP,CAEE,QAAQ,KAFV,CAGE,QAAQ,CAAI,kBAAAU,KAAK,QAAId,CAAAA,QAAQ,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,EAHnB,CAIE,KAAK,CAAIjB,KAJX,EADF,cAOE,iCAPF,GADF,cAUE,aAAK,SAAS,CAAG,YAAjB,wBACE,cACE,YAAY,CAAG,cADjB,CAEE,IAAI,CAAC,UAFP,CAGE,QAAQ,KAHV,CAIE,QAAQ,CAAI,kBAAAe,KAAK,QAAIZ,CAAAA,WAAW,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,EAJnB,CAKE,KAAK,CAAIf,QALX,EADF,cAQE,mCARF,GAVF,cAoBE,YAAK,SAAS,CAAG,iBAAjB,8BApBF,cAqBE,eACE,QAAQ,CAAIJ,cADd,CAEE,OAAO,CAAI,yBAAMS,CAAAA,0BAA0B,EAAhC,EAFb,mBArBF,cA2BE,YAAK,SAAS,CAAG,aAAjB,uBACE,WAAG,SAAS,CAAG,aAAf,wCACE,KAAC,IAAD,EAAM,EAAE,CAAG,WAAX,CAAuB,SAAS,CAAG,MAAnC,uBADF,GADF,EA3BF,cAgCE,KAAC,SAAD,EAAW,KAAK,CAAIH,KAApB,EAhCF,GAFJ,GADF,CAuCD,CA1EM","sourcesContent":["import './loginform.min.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { auth } from '../../config/firebase';\r\nimport { ErrorText } from '../../components/ErrorText/index';\r\n\r\nexport const LoginForm = () => {\r\n  const [authenticating, setAuthenticating] = useState<boolean>(false);\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const signInWithEmailAndPassword = () => {\r\n    if (error !== '') setError('');\r\n\r\n    setAuthenticating(true);\r\n\r\n    auth.signInWithEmailAndPassword(email, password)\r\n    .then(result => {\r\n      console.log(result);\r\n      navigate('/myprofile');\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setAuthenticating(false);\r\n\r\n      if (error.code.includes('auth/invalid-email'))\r\n      {\r\n        setError('Please provide a valid email.');\r\n      } else if (error.code.includes('auth/wrong-password'))\r\n      {\r\n        setError('Wrong Password. Try Again.');\r\n      } else\r\n      {\r\n        setError('Unable to login. Please try again later.');\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className = \"loginform\">\r\n      <h1>Login</h1>\r\n        <form method = \"post\">\r\n          <div className = \"text_field\">\r\n            <input\r\n              type=\"email\"\r\n              required\r\n              onChange = {event => setEmail(event.target.value)}\r\n              value = {email}\r\n            />\r\n            <label>E-mail</label>\r\n          </div>\r\n          <div className = \"text_field\">\r\n            <input\r\n              autoComplete = \"new-password\"\r\n              type=\"password\"\r\n              required\r\n              onChange = {event => setPassword(event.target.value)}\r\n              value = {password}\r\n            />\r\n            <label>Password</label>\r\n          </div>\r\n          <div className = \"forgot_password\">Forgot Password?</div>\r\n          <button\r\n            disabled = {authenticating}\r\n            onClick = {() => signInWithEmailAndPassword()}\r\n          >\r\n            Login\r\n          </button>\r\n          <div className = 'signup_link'>\r\n            <p className = 'signup_text'>Not a member?\r\n              <Link to = \"/register\" className = 'link'> Sign Up!</Link>\r\n            </p>\r\n          </div>\r\n          <ErrorText error = {error} />\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}